Log file created successfully.
Resize: Initialization not completed
FillInstanceExtensionNames: First call to vkEnumerateInstanceExtensionProperties() succeded.
FillInstanceExtensionNames: Second call to vkEnumerateInstanceExtensionProperties() succeded with 20 instance extensions
FillInstanceExtensionNames: Supported instance extensions
	VK_KHR_device_group_creation
	VK_KHR_display
	VK_KHR_external_fence_capabilities
	VK_KHR_external_memory_capabilities
	VK_KHR_external_semaphore_capabilities
	VK_KHR_get_display_properties2
	VK_KHR_get_physical_device_properties2
	VK_KHR_get_surface_capabilities2
	VK_KHR_surface
	VK_KHR_surface_protected_capabilities
	VK_KHR_win32_surface
	VK_EXT_debug_report
	VK_EXT_debug_utils
	VK_EXT_direct_mode_display
	VK_EXT_surface_maintenance1
	VK_EXT_swapchain_colorspace
	VK_NV_display_stereo
	VK_NV_external_memory_capabilities
	VK_KHR_portability_enumeration
	VK_LUNARG_direct_driver_loading
FillInstanceExtensionNames: Found VK_KHR_SURFACE_EXTENSION_NAME
FillInstanceExtensionNames: Found VK_KHR_WIN32_SURFACE_EXTENSION_NAME
FillInstanceExtensionNames: Validation is ON and required VK_EXT_DEBUG_REPORT_EXTENSION_NAME is supported
FillInstanceExtensionNames: Enabled vulkan instance extension name = VK_KHR_surface
FillInstanceExtensionNames: Enabled vulkan instance extension name = VK_KHR_win32_surface
FillInstanceExtensionNames: Enabled vulkan instance extension name = VK_EXT_debug_report
CreateVulkanInstance: FillInstanceExtensionNames() succeded.
FillValidationLayerName: First call to vkEnumerateInstanceLayerProperties() succeded.
FillValidationLayerName: Second call to vkEnumerateInstanceLayerProperties() succeded with 14 layers
FillValidationLayerName: Supported validation layers
	VK_LAYER_NV_optimus
	VK_LAYER_NV_nsight
	VK_LAYER_VALVE_steam_overlay
	VK_LAYER_VALVE_steam_fossilize
	VK_LAYER_ROCKSTAR_GAMES_social_club
	VK_LAYER_LUNARG_api_dump
	VK_LAYER_LUNARG_gfxreconstruct
	VK_LAYER_KHRONOS_synchronization2
	VK_LAYER_KHRONOS_validation
	VK_LAYER_LUNARG_monitor
	VK_LAYER_LUNARG_screenshot
	VK_LAYER_KHRONOS_profiles
	VK_LAYER_KHRONOS_shader_object
	VK_LAYER_LUNARG_crash_diagnostic
FillValidationLayerName: Validation is ON and found VK_LAYER_KHRONOS_validation
FillValidationLayerName: Enabled vulkan validation layer name = VK_LAYER_KHRONOS_validation
CreateVulkanInstance: FillValidationLayerName() succeded.
CreateVulkanInstance: vkCreateInstance() succeded
CreateValidationCallbackFunction: Found function pointer for vkCreateDebugReportCallbackEXT
CreateValidationCallbackFunction: Found function pointer for vkDestroyDebugReportCallbackEXT
CreateValidationCallbackFunction: vkCreateDebugReportCallbackEXTfnptr() succeded.
CreateVulkanInstance: CreateValidationCallbackFunction() succeded.
Initialize: CreateVulkanInstance() succeded.
GetSupportedSurface: vkCreateWin32SurfaceKHR() succeded
Initialize: GetSupportedSurface() succeded.
GetPhysicalDevice: First call to vkEnumeratePhysicalDevices() succeded with 2 devices.
GetPhysicalDevice: Second call to vkEnumeratePhysicalDevices() succeded.
GetPhysicalDevice: Device 0
	Queue (0) : Flags => 0x0000000F
		VK_QUEUE_GRAPHICS_BIT
		VK_QUEUE_COMPUTE_BIT
		VK_QUEUE_TRANSFER_BIT
		VK_QUEUE_SPARSE_BINDING_BIT
	Queue (1) : Flags => 0x0000000C
	Queue (2) : Flags => 0x0000000E
		VK_QUEUE_COMPUTE_BIT
		VK_QUEUE_TRANSFER_BIT
		VK_QUEUE_SPARSE_BINDING_BIT
	Queue (3) : Flags => 0x0000002C
	Queue (4) : Flags => 0x0000004C
	Queue (5) : Flags => 0x0000010C
GetPhysicalDevice: Features
	robustBufferAccess
	fullDrawIndexUint32
	imageCubeArray
	independentBlend
	geometryShader
	tessellationShader
	sampleRateShading
	dualSrcBlend
	logicOp
	multiDrawIndirect
	drawIndirectFirstInstance
	depthClamp
	depthBiasClamp
	fillModeNonSolid
	depthBounds
	wideLines
	largePoints
	alphaToOne
	multiViewport
	samplerAnisotropy
	textureCompressionBC
	occlusionQueryPrecise
	pipelineStatisticsQuery
	vertexPipelineStoresAndAtomics
	fragmentStoresAndAtomics
	shaderTessellationAndGeometryPointSize
	shaderImageGatherExtended
	shaderStorageImageExtendedFormats
	shaderStorageImageMultisample
	shaderStorageImageReadWithoutFormat
	shaderStorageImageWriteWithoutFormat
	shaderUniformBufferArrayDynamicIndexing
	shaderSampledImageArrayDynamicIndexing
	shaderStorageBufferArrayDynamicIndexing
	shaderStorageImageArrayDynamicIndexing
	shaderClipDistance
	shaderCullDistance
	shaderFloat64
	shaderInt64
	shaderInt16
	shaderResourceResidency
	shaderResourceMinLod
	sparseBinding
	sparseResidencyBuffer
	sparseResidencyImage2D
	sparseResidencyImage3D
	sparseResidency2Samples
	sparseResidency4Samples
	sparseResidency8Samples
	sparseResidency16Samples
	sparseResidencyAliased
	variableMultisampleRate
	inheritedQueries
GetPhysicalDevice: Selected Physical device supports tesselation shader.
GetPhysicalDevice: Selected Physical device supports geometry shader.
Initialize: GetPhysicalDevice() succeded.
************ Vukan Information ***********
************* Device 0 ***************
ApiVersion: 1.3.280
Device Name: NVIDIA RTX A6000
Driver Version: 560.376
Device Type: Discrete GPU (dGPU)
VendorId: 0x10de
DeviceId: 0x2230
************* Device 1 ***************
ApiVersion: 1.4.309
Device Name: Intel(R) Graphics
Driver Version: 0.405
Device Type: Integrated GPU (iGPU)
VendorId: 0x8086
DeviceId: 0x7d67
**************************************
Initialize: PrintVkInfo() succeded.
FillDeviceExtensionNames: First call to vkEnumerateDeviceExtensionProperties() succeded with 225 device extensions.
FillDeviceExtensionNames: Second call to vkEnumerateDeviceExtensionProperties() succeded.
FillDeviceExtensionNames: Supported device extensions
	VK_KHR_16bit_storage
	VK_KHR_8bit_storage
	VK_KHR_acceleration_structure
	VK_KHR_bind_memory2
	VK_KHR_buffer_device_address
	VK_KHR_calibrated_timestamps
	VK_KHR_cooperative_matrix
	VK_KHR_copy_commands2
	VK_KHR_create_renderpass2
	VK_KHR_dedicated_allocation
	VK_KHR_deferred_host_operations
	VK_KHR_depth_stencil_resolve
	VK_KHR_descriptor_update_template
	VK_KHR_device_group
	VK_KHR_draw_indirect_count
	VK_KHR_driver_properties
	VK_KHR_dynamic_rendering
	VK_KHR_dynamic_rendering_local_read
	VK_KHR_external_fence
	VK_KHR_external_fence_win32
	VK_KHR_external_memory
	VK_KHR_external_memory_win32
	VK_KHR_external_semaphore
	VK_KHR_external_semaphore_win32
	VK_KHR_format_feature_flags2
	VK_KHR_fragment_shader_barycentric
	VK_KHR_fragment_shading_rate
	VK_KHR_get_memory_requirements2
	VK_KHR_global_priority
	VK_KHR_image_format_list
	VK_KHR_imageless_framebuffer
	VK_KHR_index_type_uint8
	VK_KHR_line_rasterization
	VK_KHR_load_store_op_none
	VK_KHR_maintenance1
	VK_KHR_maintenance2
	VK_KHR_maintenance3
	VK_KHR_maintenance4
	VK_KHR_maintenance5
	VK_KHR_maintenance6
	VK_KHR_map_memory2
	VK_KHR_multiview
	VK_KHR_pipeline_executable_properties
	VK_KHR_pipeline_library
	VK_KHR_present_id
	VK_KHR_present_wait
	VK_KHR_push_descriptor
	VK_KHR_ray_query
	VK_KHR_ray_tracing_maintenance1
	VK_KHR_ray_tracing_pipeline
	VK_KHR_ray_tracing_position_fetch
	VK_KHR_relaxed_block_layout
	VK_KHR_sampler_mirror_clamp_to_edge
	VK_KHR_sampler_ycbcr_conversion
	VK_KHR_separate_depth_stencil_layouts
	VK_KHR_shader_atomic_int64
	VK_KHR_shader_clock
	VK_KHR_shader_draw_parameters
	VK_KHR_shader_expect_assume
	VK_KHR_shader_float16_int8
	VK_KHR_shader_float_controls
	VK_KHR_shader_float_controls2
	VK_KHR_shader_integer_dot_product
	VK_KHR_shader_maximal_reconvergence
	VK_KHR_shader_non_semantic_info
	VK_KHR_shader_quad_control
	VK_KHR_shader_subgroup_extended_types
	VK_KHR_shader_subgroup_rotate
	VK_KHR_shader_subgroup_uniform_control_flow
	VK_KHR_shader_terminate_invocation
	VK_KHR_spirv_1_4
	VK_KHR_storage_buffer_storage_class
	VK_KHR_swapchain
	VK_KHR_swapchain_mutable_format
	VK_KHR_synchronization2
	VK_KHR_timeline_semaphore
	VK_KHR_uniform_buffer_standard_layout
	VK_KHR_variable_pointers
	VK_KHR_vertex_attribute_divisor
	VK_KHR_video_decode_av1
	VK_KHR_video_decode_h264
	VK_KHR_video_decode_h265
	VK_KHR_video_decode_queue
	VK_KHR_video_encode_h264
	VK_KHR_video_encode_h265
	VK_KHR_video_encode_queue
	VK_KHR_video_maintenance1
	VK_KHR_video_queue
	VK_KHR_vulkan_memory_model
	VK_KHR_win32_keyed_mutex
	VK_KHR_workgroup_memory_explicit_layout
	VK_KHR_zero_initialize_workgroup_memory
	VK_EXT_4444_formats
	VK_EXT_attachment_feedback_loop_dynamic_state
	VK_EXT_attachment_feedback_loop_layout
	VK_EXT_blend_operation_advanced
	VK_EXT_border_color_swizzle
	VK_EXT_buffer_device_address
	VK_EXT_calibrated_timestamps
	VK_EXT_color_write_enable
	VK_EXT_conditional_rendering
	VK_EXT_conservative_rasterization
	VK_EXT_custom_border_color
	VK_EXT_depth_bias_control
	VK_EXT_depth_clamp_zero_one
	VK_EXT_depth_clip_control
	VK_EXT_depth_clip_enable
	VK_EXT_depth_range_unrestricted
	VK_EXT_descriptor_buffer
	VK_EXT_descriptor_indexing
	VK_EXT_discard_rectangles
	VK_EXT_dynamic_rendering_unused_attachments
	VK_EXT_extended_dynamic_state
	VK_EXT_extended_dynamic_state2
	VK_EXT_extended_dynamic_state3
	VK_EXT_external_memory_host
	VK_EXT_fragment_shader_interlock
	VK_EXT_full_screen_exclusive
	VK_EXT_global_priority
	VK_EXT_global_priority_query
	VK_EXT_graphics_pipeline_library
	VK_EXT_hdr_metadata
	VK_EXT_host_image_copy
	VK_EXT_host_query_reset
	VK_EXT_image_2d_view_of_3d
	VK_EXT_image_robustness
	VK_EXT_image_sliced_view_of_3d
	VK_EXT_image_view_min_lod
	VK_EXT_index_type_uint8
	VK_EXT_inline_uniform_block
	VK_EXT_line_rasterization
	VK_EXT_load_store_op_none
	VK_EXT_memory_budget
	VK_EXT_memory_priority
	VK_EXT_mesh_shader
	VK_EXT_multi_draw
	VK_EXT_mutable_descriptor_type
	VK_EXT_nested_command_buffer
	VK_EXT_non_seamless_cube_map
	VK_EXT_opacity_micromap
	VK_EXT_pageable_device_local_memory
	VK_EXT_pci_bus_info
	VK_EXT_pipeline_creation_cache_control
	VK_EXT_pipeline_creation_feedback
	VK_EXT_pipeline_library_group_handles
	VK_EXT_pipeline_robustness
	VK_EXT_post_depth_coverage
	VK_EXT_primitive_topology_list_restart
	VK_EXT_primitives_generated_query
	VK_EXT_private_data
	VK_EXT_provoking_vertex
	VK_EXT_queue_family_foreign
	VK_EXT_robustness2
	VK_EXT_sample_locations
	VK_EXT_sampler_filter_minmax
	VK_EXT_scalar_block_layout
	VK_EXT_separate_stencil_usage
	VK_EXT_shader_atomic_float
	VK_EXT_shader_demote_to_helper_invocation
	VK_EXT_shader_image_atomic_int64
	VK_EXT_shader_module_identifier
	VK_EXT_shader_object
	VK_EXT_shader_subgroup_ballot
	VK_EXT_shader_subgroup_vote
	VK_EXT_shader_viewport_index_layer
	VK_EXT_subgroup_size_control
	VK_EXT_swapchain_maintenance1
	VK_EXT_texel_buffer_alignment
	VK_EXT_tooling_info
	VK_EXT_transform_feedback
	VK_EXT_vertex_attribute_divisor
	VK_EXT_vertex_input_dynamic_state
	VK_EXT_ycbcr_2plane_444_formats
	VK_EXT_ycbcr_image_arrays
	VK_NV_acquire_winrt_display
	VK_NV_clip_space_w_scaling
	VK_NV_compute_shader_derivatives
	VK_NV_cooperative_matrix
	VK_NV_copy_memory_indirect
	VK_NV_corner_sampled_image
	VK_NV_coverage_reduction_mode
	VK_NV_cuda_kernel_launch
	VK_NV_dedicated_allocation
	VK_NV_dedicated_allocation_image_aliasing
	VK_NV_descriptor_pool_overallocation
	VK_NV_device_diagnostic_checkpoints
	VK_NV_device_diagnostics_config
	VK_NV_device_generated_commands
	VK_NV_device_generated_commands_compute
	VK_NV_external_memory
	VK_NV_external_memory_rdma
	VK_NV_external_memory_win32
	VK_NV_fill_rectangle
	VK_NV_fragment_coverage_to_color
	VK_NV_fragment_shader_barycentric
	VK_NV_fragment_shading_rate_enums
	VK_NV_framebuffer_mixed_samples
	VK_NV_geometry_shader_passthrough
	VK_NV_inherited_viewport_scissor
	VK_NV_linear_color_attachment
	VK_NV_low_latency
	VK_NV_low_latency2
	VK_NV_memory_decompression
	VK_NV_mesh_shader
	VK_NV_optical_flow
	VK_NV_present_barrier
	VK_NV_raw_access_chains
	VK_NV_ray_tracing
	VK_NV_ray_tracing_invocation_reorder
	VK_NV_ray_tracing_motion_blur
	VK_NV_representative_fragment_test
	VK_NV_sample_mask_override_coverage
	VK_NV_scissor_exclusive
	VK_NV_shader_atomic_float16_vector
	VK_NV_shader_image_footprint
	VK_NV_shader_sm_builtins
	VK_NV_shader_subgroup_partitioned
	VK_NV_shading_rate_image
	VK_NV_viewport_array2
	VK_NV_viewport_swizzle
	VK_NV_win32_keyed_mutex
	VK_NVX_binary_import
	VK_NVX_image_view_handle
	VK_NVX_multiview_per_view_attributes
	VK_AMD_buffer_marker
FillDeviceExtensionNames: Found VK_KHR_SWAPCHAIN_EXTENSION_NAME
FillDeviceExtensionNames: Enabled vulkan device extension name = VK_KHR_swapchain
CreateVulkanDevice: FillDeviceExtensionNames() succeded.
CreateVulkanDevice: vkCreateDevice() succeded.
Initialize: CreateVulkanDevice() succeded.
Selecting 0, 0 from queue
GetDeviceQueue: vkGetDeviceQueue() returned valid vkQueue handle.
GetPhysicalDeviceSurfaceFormatAndColorSpace: First call to vkGetPhysicalDeviceSurfaceFormatsKHR() succeded with 5 count
GetPhysicalDeviceSurfaceFormatAndColorSpace: Second call to vkGetPhysicalDeviceSurfaceFormatsKHR() succeded with 5 count
GetPhysicalDeviceSurfaceFormatAndColorSpace: Selected surface format VK_FORMAT_B8G8R8A8_UNORM
GetPhysicalDeviceSurfaceFormatAndColorSpace: Selected color space VK_COLOR_SPACE_SRGB_NONLINEAR_KHR
GetPhysicalDeviceSurfaceFormatAndColorSpace: Freed vkSurfaceFormatKHR_array
Initialize: GetPhysicalDeviceSurfaceFormatAndColorSpace() succeded.
GetPhysicalDevicePresentMode: First call to vkGetPhysicalDeviceSurfacePresentModesKHR() succeded with 4 count
GetPhysicalDevicePresentMode: Second call to vkGetPhysicalDeviceSurfacePresentModesKHR() succeded
GetPhysicalDevicePresentMode: Selected present mode VK_PRESENT_MODE_MAILBOX_KHR
GetPhysicalDevicePresentMode: Freed vkPresentModeKHR_array
Initialize: GetPhysicalDevicePresentMode() succeded.
GetPhysicalDeviceSurfaceFormatAndColorSpace: First call to vkGetPhysicalDeviceSurfaceFormatsKHR() succeded with 5 count
GetPhysicalDeviceSurfaceFormatAndColorSpace: Second call to vkGetPhysicalDeviceSurfaceFormatsKHR() succeded with 5 count
GetPhysicalDeviceSurfaceFormatAndColorSpace: Selected surface format VK_FORMAT_B8G8R8A8_UNORM
GetPhysicalDeviceSurfaceFormatAndColorSpace: Selected color space VK_COLOR_SPACE_SRGB_NONLINEAR_KHR
GetPhysicalDeviceSurfaceFormatAndColorSpace: Freed vkSurfaceFormatKHR_array
CreateSwapchain: GetPhysicalDeviceSurfaceFormatAndColorSpace() succeded.
CreateSwapchain: vkGetPhysicalDeviceSurfaceCapabilitiesKHR() succeded.
CreateSwapchain: vkSurfaceCapabilitiesKHR.currentExtent.width != UINT32_MAX
CreateSwapchain: Swapchain image width X height = 784 X 561
GetPhysicalDevicePresentMode: First call to vkGetPhysicalDeviceSurfacePresentModesKHR() succeded with 4 count
GetPhysicalDevicePresentMode: Second call to vkGetPhysicalDeviceSurfacePresentModesKHR() succeded
GetPhysicalDevicePresentMode: Selected present mode VK_PRESENT_MODE_MAILBOX_KHR
GetPhysicalDevicePresentMode: Freed vkPresentModeKHR_array
CreateSwapchain: GetPhysicalDevicePresentMode() succeded.
CreateSwapchain: vkCreateSwapchainKHR() succeded.
Initialize: CreateSwapchain() succeded.
CreateImagesAndImageViews: first call to vkCreateSwapchainKHR() succeded with 2 images
CreateImagesAndImageViews: second call to vkCreateSwapchainKHR() succeded with 2 images
CreateImagesAndImageViews: vkCreateImageView succeded for iteration 0
CreateImagesAndImageViews: vkCreateImageView succeded for iteration 1
Initialize: CreateImagesAndImageViews() succeded.
Initialize: CreateCommandPool() succeded.
Initialize: CreateCommandBuffers() succeded.
CreateVertexBuffer: vkCreateBuffer succeded for triangle
CreateVertexBuffer: Found equired memory type at index 3 for triangle
CreateVertexBuffer: vkAllocateMemory succeded for triangle
CreateVertexBuffer: vkBindBufferMemory succeded for triangle
CreateVertexBuffer: vkMapMemory succeded for triangle
CreateVertexBuffer: writing vertex data to mapped memory for triangle
CreateVertexBuffer: wrote vertex data to mapped memory for triangle
CreateVertexBuffer: unmapping vertex device memory for triangle
CreateVertexBuffer: unmapped vertex device memory for triangle
CreateVertexBuffer: vkCreateBuffer succeded for rectangle
CreateVertexBuffer: Found equired memory type at index 3 for rectangle
CreateVertexBuffer: vkAllocateMemory succeded for rectangle
CreateVertexBuffer: vkBindBufferMemory succeded for rectangle
CreateVertexBuffer: vkMapMemory succeded for rectangle
CreateVertexBuffer: writing vertex data to mapped memory for rectangle
CreateVertexBuffer: wrote vertex data to mapped memory for rectangle
CreateVertexBuffer: unmapping vertex device memory for rectangle
CreateVertexBuffer: unmapped vertex device memory for rectangle
Initialize: CreateVertexBuffer() succeded.
CreateUniformBuffer: vkCreateBuffer succeded for triangle
CreateUniformBuffer: Found equired memory type at index 3 for triangle
CreateUniformBuffer: vkAllocateMemory succeded for triangle
CreateUniformBuffer: vkBindBufferMemory succeded for triangle
CreateUniformBuffer: vkCreateBuffer succeded for rectangle
CreateUniformBuffer: Found equired memory type at index 3 for rectangle
CreateUniformBuffer: vkAllocateMemory succeded for rectangle
CreateUniformBuffer: vkBindBufferMemory succeded for rectangle
CreateUniformBuffer: UpdateUniformBuffer succeded
Initialize: CreateUniformBuffer() succeded.
CreateShaders: Successfully opened shader.vert.spv
CreateShaders: Successfully allocated buffer of size 1356 for vertex shader
CreateShaders: Successfully read shader.vert.spv
CreateShaders: vkCreateShaderModule for vertex shader succeded
CreateShaders: vertex shader module created
CreateShaders: Successfully opened shader.frag.spv
CreateShaders: Successfully allocated buffer of size 372 for fragment shader
CreateShaders: Successfully read shader.frag.spv
CreateShaders: vkCreateShaderModule for fragment shader succeded
CreateShaders: fragment shader module created
Initialize: CreateShaders() succeded.
Initialize: CreateDescriptorSetLayout() succeded.
Initialize: CreatePipelineLayout() succeded.
Initialize: CreateDescriptorPool() succeded.
CreateDescriptorSet: vkUpdateDescriptorSets completed for triangle
CreateDescriptorSet: vkUpdateDescriptorSets completed for rectangle
Initialize: CreateDescriptorSet() succeded.
Initialize: CreateRenderPass() succeded.
CreatePipeline: Created pipeline cache
CreatePipeline: Creating pipeline
CreatePipeline: Destroying pipeline cache
Initialize: CreatePipeline() succeded.
CreateFramebuffers: Creating frame buffer 0
CreateFramebuffers: Created frame buffer 0
CreateFramebuffers: Creating frame buffer 1
CreateFramebuffers: Created frame buffer 1
Initialize: CreateFramebuffers() succeded.
Initialize: CreateSemaphores() succeded.
Initialize: CreateFences() succeded.
BuildCommandBuffers: Resetted 0th command buffer.
BuildCommandBuffers: Begin 0th command buffer.
BuildCommandBuffers: vkCmdBeginRenderPass 0th command buffer.
BuildCommandBuffers: vkCmdEndRenderPass 0th command buffer.
BuildCommandBuffers: vkEndCommandBuffer 0th command buffer.
BuildCommandBuffers: Resetted 1th command buffer.
BuildCommandBuffers: Begin 1th command buffer.
BuildCommandBuffers: vkCmdBeginRenderPass 1th command buffer.
BuildCommandBuffers: vkCmdEndRenderPass 1th command buffer.
BuildCommandBuffers: vkEndCommandBuffer 1th command buffer.
Initialize: BuildCommandBuffers() succeded.
Initialization succeded.
WinMain: Initialize() succeded.
Uninitialize: waiting for all operations on the device to finish
Uninitialize: vkDeviceWaitIdle returned 0
Uninitialize: Destroying fence 0
Uninitialize: Destroyed fence 0
Uninitialize: Destroying fence 1
Uninitialize: Destroyed fence 1
Uninitialize: Destroying vkSemaphore_renderComplete
Uninitialize: vkSemaphore_renderComplete destroyed
Uninitialize: Destroying vkSemaphore_backBuffer
Uninitialize: vkSemaphore_backBuffer destroyed
Uninitialize: Destroying frame buffer 0
Uninitialize: Destroyed frame buffer 0
Uninitialize: Destroying frame buffer 1
Uninitialize: Destroyed frame buffer 1
Uninitialize: Freed vkFrameBuffer_array
Uninitialize: Destroying vkPipeline
Uninitialize: vkPipeline destroyed
Uninitialize: Destroying vkPipelineLayout
Uninitialize: vkPipelineLayout destroyed
Uninitialize: Destroying vkDescriptorSetLayout
Uninitialize: vkDescriptorSetLayout destroyed
Uninitialize: Destroying vkDescriptorPool
Uninitialize: vkDescriptorPool, vkDescriptorSet_triangle and vkDescriptorSet_rectangle destroyed
Uninitialize: Destroying vkRenderPass
Uninitialize: vkRenderPass destroyed
Uninitialize: Destroying vkShaderModule_fragment_shader
Uninitialize: Destroyed vkShaderModule_fragment_shader
Uninitialize: Destroying vkShaderModule_vertex_shader
Uninitialize: Destroyed vkShaderModule_vertex_shader
Uninitialize: Freeing vkBuffer for uniformdata for rectangle
Uninitialize: Freed vkBuffer for uniform data for rectangle
Uninitialize: Freeing device memory for uniform data for rectangle
Uninitialze: Freed device memory for uniform data for rectangle
Uninitialize: Freeing vkBuffer for uniformdata for triangle
Uninitialize: Freed vkBuffer for uniform data for triangle
Uninitialize: Freeing device memory for uniform data for triangle
Uninitialze: Freed device memory for uniform data for triangle
Uninitialize: Freeing vkBuffer for vertexData_position_rectangle
Uninitialize: Freed vkBuffer for vertexData_position_rectangle
Uninitialize: Freeing device memory for vertexData_position_rectangle
Uninitialize: Freed device memory for vertexData_position_rectangle
Uninitialize: Freeing vkBuffer for vertexData_position_triangle
Uninitialize: Freed vkBuffer for vertexData_position_triangle
Uninitialize: Freeing device memory for vertexData_position_triangle
Uninitialize: Freed device memory for vertexData_position_triangle
Uninitialize: Freeing command buffer 0
Uninitialize: Freeing command buffer 1
Uninitialize: Freeing vkCommandBuffer_array
Uninitialize: vkCommandBuffer_array freed
Uninitialize: Destroying command pool
Uninitialize: Command pool destroyed
Uninitialize: Destroyed swapchain image view 0
Uninitialize: Destroyed swapchain image view 1
Uninitialize: freed swapchainImageView_array
Uninitialize: No need to destroy VkImage associated with swapchain since the same will be destroyed later inside vkDestroySwapchainKHR()
Uninitialize: freed swapchainImage_array
Uninitialize: destroying swapchain
Uninitialize: swapchain destroyed
Uninitialize: vkDestroyDevice is done
Uninitialize: vkDestroySurfaceKHR succeded
Uninitialize: vkDestroyInstance succeded
Uninitialize: Log file successfully closed.
